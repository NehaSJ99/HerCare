{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Downloads\\\\HerCare\\\\frontend\\\\src\\\\components\\\\PeriodTracker\\\\PeriodCalendar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\n\n/**\r\n * periodDataList: Array of user period records\r\n *   e.g., [{ start_date: \"YYYY-MM-DD\", end_date: \"YYYY-MM-DD\" }]\r\n *\r\n * predictions: {\r\n *   nextPeriodStart: \"YYYY-MM-DD\",\r\n *   ovulationDay: \"YYYY-MM-DD\",\r\n *   fertileWindowStart: \"YYYY-MM-DD\",\r\n *   fertileWindowEnd: \"YYYY-MM-DD\"\r\n * }\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PeriodCalendar = ({\n  periodDataList = [],\n  predictions\n}) => {\n  _s();\n  const [value, setValue] = useState(new Date());\n\n  // Utility: Convert \"YYYY-MM-DD\" to a Date object\n  const toDate = dateString => new Date(dateString + 'T00:00:00');\n\n  // Collect historical period days (red dot)\n  const periodDays = new Set();\n  periodDataList.forEach(period => {\n    let current = toDate(period.start_date);\n    const end = toDate(period.end_date);\n    while (current <= end) {\n      periodDays.add(current.toISOString().split('T')[0]);\n      current = new Date(current.getTime() + 86400000); // +1 day\n    }\n  });\n\n  // Collect predicted days\n  const nextPeriodStart = (predictions === null || predictions === void 0 ? void 0 : predictions.nextPeriodStart) || null; // Red \"X\"\n  const fertileWindowDays = new Set(); // Green dots\n\n  if (predictions) {\n    let fwStart = toDate(predictions.fertileWindowStart);\n    const fwEnd = toDate(predictions.fertileWindowEnd);\n    while (fwStart <= fwEnd) {\n      fertileWindowDays.add(fwStart.toISOString().split('T')[0]);\n      fwStart = new Date(fwStart.getTime() + 86400000);\n    }\n  }\n\n  // Use tileContent to display markings\n  const tileContent = ({\n    date,\n    view\n  }) => {\n    if (view !== 'month') return null;\n    const dateStr = date.toISOString().split('T')[0];\n\n    // Red dot for past periods\n    if (periodDays.has(dateStr)) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '2px',\n          height: '12px',\n          width: '12px',\n          borderRadius: '50%',\n          backgroundColor: '#ff4d4d',\n          // Light red for past periods\n          marginLeft: 'auto',\n          marginRight: 'auto',\n          boxShadow: '0 2px 8px rgba(0, 0, 0, 0.2)' // Add shadow for depth\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this);\n    }\n\n    // Red \"X\" for next period start date\n    if (nextPeriodStart && nextPeriodStart === dateStr) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '18px',\n          fontWeight: 'bold',\n          color: '#ff4d4d',\n          textAlign: 'center',\n          transform: 'scale(1.4)'\n        },\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this);\n    }\n\n    // Green dot for fertile window with grass-like appearance\n    if (fertileWindowDays.has(dateStr)) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '2px',\n          height: '12px',\n          width: '12px',\n          borderRadius: '50%',\n          backgroundColor: '#4CAF50',\n          // Green for fertile window\n          marginLeft: 'auto',\n          marginRight: 'auto',\n          border: '2px solid #388E3C',\n          // Grass border for fertility\n          boxShadow: '0 4px 8px rgba(0, 0, 0, 0.3)' // Soft shadow for green dot\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this);\n    }\n    return null;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white p-8 rounded-lg shadow-xl max-w-md mx-auto space-y-6 border-2 border-gray-300 mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-semibold text-center text-pink-600 mt-4\",\n      children: \"Period Calendar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n      onChange: setValue,\n      value: value,\n      tileContent: tileContent,\n      className: \"rounded-lg border-2 border-pink-400 shadow-lg hover:shadow-xl transition-shadow duration-300 bg-pink-100\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center text-gray-500 text-sm mt-6\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Track your menstrual cycle, ovulation, and fertile windows easily!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s(PeriodCalendar, \"ojhCmkQ3k+kVHyMOfBmyTFu2wy0=\");\n_c = PeriodCalendar;\nexport default PeriodCalendar;\nvar _c;\n$RefreshReg$(_c, \"PeriodCalendar\");","map":{"version":3,"names":["React","useState","Calendar","jsxDEV","_jsxDEV","PeriodCalendar","periodDataList","predictions","_s","value","setValue","Date","toDate","dateString","periodDays","Set","forEach","period","current","start_date","end","end_date","add","toISOString","split","getTime","nextPeriodStart","fertileWindowDays","fwStart","fertileWindowStart","fwEnd","fertileWindowEnd","tileContent","date","view","dateStr","has","style","marginTop","height","width","borderRadius","backgroundColor","marginLeft","marginRight","boxShadow","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","fontWeight","color","textAlign","transform","children","border","className","onChange","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Downloads/HerCare/frontend/src/components/PeriodTracker/PeriodCalendar.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Calendar from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css';\r\n\r\n/**\r\n * periodDataList: Array of user period records\r\n *   e.g., [{ start_date: \"YYYY-MM-DD\", end_date: \"YYYY-MM-DD\" }]\r\n *\r\n * predictions: {\r\n *   nextPeriodStart: \"YYYY-MM-DD\",\r\n *   ovulationDay: \"YYYY-MM-DD\",\r\n *   fertileWindowStart: \"YYYY-MM-DD\",\r\n *   fertileWindowEnd: \"YYYY-MM-DD\"\r\n * }\r\n */\r\n\r\nconst PeriodCalendar = ({ periodDataList = [], predictions }) => {\r\n  const [value, setValue] = useState(new Date());\r\n\r\n  // Utility: Convert \"YYYY-MM-DD\" to a Date object\r\n  const toDate = (dateString) => new Date(dateString + 'T00:00:00');\r\n\r\n  // Collect historical period days (red dot)\r\n  const periodDays = new Set();\r\n  periodDataList.forEach((period) => {\r\n    let current = toDate(period.start_date);\r\n    const end = toDate(period.end_date);\r\n    while (current <= end) {\r\n      periodDays.add(current.toISOString().split('T')[0]);\r\n      current = new Date(current.getTime() + 86400000); // +1 day\r\n    }\r\n  });\r\n\r\n  // Collect predicted days\r\n  const nextPeriodStart = predictions?.nextPeriodStart || null; // Red \"X\"\r\n  const fertileWindowDays = new Set(); // Green dots\r\n\r\n  if (predictions) {\r\n    let fwStart = toDate(predictions.fertileWindowStart);\r\n    const fwEnd = toDate(predictions.fertileWindowEnd);\r\n    while (fwStart <= fwEnd) {\r\n      fertileWindowDays.add(fwStart.toISOString().split('T')[0]);\r\n      fwStart = new Date(fwStart.getTime() + 86400000);\r\n    }\r\n  }\r\n\r\n  // Use tileContent to display markings\r\n  const tileContent = ({ date, view }) => {\r\n    if (view !== 'month') return null;\r\n    const dateStr = date.toISOString().split('T')[0];\r\n\r\n    // Red dot for past periods\r\n    if (periodDays.has(dateStr)) {\r\n      return (\r\n        <div\r\n          style={{\r\n            marginTop: '2px',\r\n            height: '12px',\r\n            width: '12px',\r\n            borderRadius: '50%',\r\n            backgroundColor: '#ff4d4d', // Light red for past periods\r\n            marginLeft: 'auto',\r\n            marginRight: 'auto',\r\n            boxShadow: '0 2px 8px rgba(0, 0, 0, 0.2)', // Add shadow for depth\r\n          }}\r\n        />\r\n      );\r\n    }\r\n\r\n    // Red \"X\" for next period start date\r\n    if (nextPeriodStart && nextPeriodStart === dateStr) {\r\n      return (\r\n        <div\r\n          style={{\r\n            fontSize: '18px',\r\n            fontWeight: 'bold',\r\n            color: '#ff4d4d',\r\n            textAlign: 'center',\r\n            transform: 'scale(1.4)',\r\n          }}\r\n        >\r\n          X\r\n        </div>\r\n      );\r\n    }\r\n\r\n    // Green dot for fertile window with grass-like appearance\r\n    if (fertileWindowDays.has(dateStr)) {\r\n      return (\r\n        <div\r\n          style={{\r\n            marginTop: '2px',\r\n            height: '12px',\r\n            width: '12px',\r\n            borderRadius: '50%',\r\n            backgroundColor: '#4CAF50', // Green for fertile window\r\n            marginLeft: 'auto',\r\n            marginRight: 'auto',\r\n            border: '2px solid #388E3C', // Grass border for fertility\r\n            boxShadow: '0 4px 8px rgba(0, 0, 0, 0.3)', // Soft shadow for green dot\r\n          }}\r\n        />\r\n      );\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white p-8 rounded-lg shadow-xl max-w-md mx-auto space-y-6 border-2 border-gray-300 mt-4\">\r\n      <h2 className=\"text-2xl font-semibold text-center text-pink-600 mt-4\">Period Calendar</h2>\r\n      <Calendar\r\n        onChange={setValue}\r\n        value={value}\r\n        tileContent={tileContent}\r\n        className=\"rounded-lg border-2 border-pink-400 shadow-lg hover:shadow-xl transition-shadow duration-300 bg-pink-100\"\r\n      />\r\n      <div className=\"text-center text-gray-500 text-sm mt-6\">\r\n        <p>Track your menstrual cycle, ovulation, and fertile windows easily!</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PeriodCalendar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}